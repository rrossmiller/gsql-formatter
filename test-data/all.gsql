creAte 
or replace distRibuted QUERY TwitchEgosData( inT  
current_partition =   0 , INT total_partitions=100, set <string >   myList) FOR GRAPH   TwitchEgos SYNTAX V2{
    /*
 block comment line 1
	 block comment line 2
	*/

       //line comment
typedef   TUPlE<VeRTeX indv      , InT age, string name, float x , datetime day, uint 

u>indv_age     ;
typedef   TUPlE<VeRTeX indv      , InT age, string name, float x , datetime day, uint u> type2    ;


 BoOL t    ;
    InT x 
    = 90         
    ;
                            FlOAT x = 90.0
         , y, z =                     1.0   ;
sumaccum<
int     > 
@a   ;
sumaccum<
int     > 
@a   ;
   SumAccum<FLOAT> @a  
       ,   @@b  ;
  AvgACcum @ac1 ,
  @@b=1, @@c
  ;
   SetAccum<Name
     > @ac1, @@b;
   mapAccum
   <InT
   , STRING> @acc   ;
  MapAccum<INT , STRING >    @@acc  ;

    HeapAccum <
    T  > ( 150,
    attr1 aSC ,    attr2 DeSC) @@ac1            ;
         groupbyaccum
    <       STRING k       , INT i, ListAccum<STRING> l, SumAccum<STRING         > x   ,
    GroupbyAccum<STRING k, INT i, ListAccum<STRING > l,  SumAccum<STRING   > x>      gb> @ac1;

   int i 
;
i=100;
i. attr  =100  ;

Users = {User.*};

Src
    = {  _

};
Src = {
   ANY,   V .* } ;
    Src     = {         V.*      };
    Src =          {V.*    , S.*,    T}         ;
    Src 
    = {  @@ glbl  };
    Src = {a, b};


Src = (          A      
    union B);

             Src = A UNIOn ( B
    INTERSEcT   C   )
    MInUS   D ;

v.
@ac1        =   n  ;
    v.@ac1 +=
    @@ac;

v.@ac1
    = name   .name;
            v   .
    @ac1 =    n.@n   .size(  );
        v   .
    @ac1 =    n.@n   .size(  ) union         X;
    v   .
    @ac1 = (
    n.@n   .size(  ) union         X
    );
    v.@ac1 =    COALESCE (  );
    v.@ac1 =    IseMPTY( 
    L
    );
    v.@ac1 = 1      +  2    
    / 3;
/*
Maxaccum<float> @m;
	    //comment
Users = {User.*};
	Users = SELECT s FROM Users:s 
			             WHERE vertex_to_int(s) % total_partitions == current_partition
						 And 'testCondition'
            
			  Accum s.@id += s.id,
              @@anotheraccum += 0;

if (condition) then 
	Users = SELECT s FROM Users:s ;
	end;
PRINT Users;
*/
}
